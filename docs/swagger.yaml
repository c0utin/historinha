basePath: /api
definitions:
  request.CreateUsersRequest:
    properties:
      name:
        maxLength: 200
        minLength: 1
        type: string
    required:
    - name
    type: object
  request.UpdateUsersRequest:
    properties:
      id:
        type: integer
      name:
        maxLength: 200
        minLength: 1
        type: string
    required:
    - id
    - name
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      status:
        type: string
    type: object
host: localhost:42069
info:
  contact: {}
  description: historinhas muito loko
  title: Historinha
  version: "1.0"
paths:
  /users:
    get:
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload
      parameters:
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.CreateUsersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create a new user
      tags:
      - users
  /users/{userId}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a user
      tags:
      - users
    get:
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Find a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing user with the input payload
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: User request body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUsersRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an existing user
      tags:
      - users
swagger: "2.0"
